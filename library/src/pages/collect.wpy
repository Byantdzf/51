<template>
  <view class="page-user page-index">
    <view class="weui-panel">
      <view class="weui-cells weui-cells_after-title">
        <view class="weui-cell">
          <view class="weui-cell__bd userinfo clearfix">
            <image class="userinfo-avatar" src="{{ user.wechat.avatar }}" background-size="cover"/>
            <view class="flo_r" style="margin:26rpx">
              <button  type="default" size="mini"  @tap="gotoTab('/pages/index')"  style="padding:2rpx 12rpx;line-height: 42rpx;margin-right: 22rpx">
                <image  class="imgicon" mode="aspectFit" src="../images/tabbars/icon-home.png" style="margin-top: -4rpx"></image>主页
              </button>
              <button  type="warn" size="mini" plain open-type="share"  style="padding:2rpx 12rpx;line-height: 42rpx">
                分享<image  class="imgicon" mode="aspectFit" src="../images/icon/icon-share_red.png" style="margin-top: -4rpx"></image>
              </button>
            </view>
            <view class="userinfo-info" >
              <view class="userinfo-nickname">{{ mylibrary.name }}</view>
            </view>
          </view>
        </view>
      </view>
    </view>
    <!--<view class="user_btn">-->
      <!--<view class="page_btn">-->
        <!--<form bindsubmit="formSubmit" report-submit>-->
          <!--<button formType="submit" class="btn" data-type="click">-->
            <!--<button class="weui-btn" type="primary"  open-type="share" size="mini">分享好友</button>-->
            <!--<button class="flo_r" type="primary" size="mini" @tap="scanBook({{mylib.id}})">扫码录书</button>-->
          <!--</button>-->
        <!--</form>-->
      <!--</view>-->
    <!--</view>-->
    <view class="weui-flex library-wrapper">
      <view @tap="goto('/pages/user/follower?user_id={{user.id}}')" class="weui-flex__item list-item">
        <view class="item-title" style="color:#5c8092;font-weight: 500">{{user.followings}}</view>
        <view class="font_26" style="color:#8a9691;">关注</view>
      </view>
      <view @tap="goto('/pages/user/follower?user_id={{user.id}}&type=follower')" class="weui-flex__item list-item">
        <view class="item-title" style="color:#5c8092;font-weight: 500">{{user.followers}}</view>
        <view class="font_26" style="color:#8a9691;">粉丝</view>
      </view>
      <view @tap="goto('/pages/user/booklist?library_id={{mylibrary.id}}&id={{mylibrary.library_sorts[0].id}}')" class="weui-flex__item list-item">
        <view class="item-title" style="color:#64b9bf;font-weight: 500">{{ mylibrary.library_sorts[0].count }}</view>
        <view class="font_26"  style="color:#5c8092;">所有藏书</view>
      </view>
    </view>
    <!--<view @tap="goto('/pages/library/usercollect?library_id=14')">ceshi1</view>-->
    <ClassifyList :list.sync="list" :library_id.sync="library_id"></ClassifyList>
    <!--<view class="BookList" wx:for="{{list}}" wx:key="*this"  @tap="navTo({{mylibrary.id}}, {{item.id}})">-->
      <!--<view class="flo_l">-->
        <!--<image src="{{item.image}}" mode="aspectFit" />-->
      <!--</view>-->
      <!--<view class="flo_l" style="width: 65%; padding-top: 10rpx">-->
        <!--<view class="font_28 bold ellipsis_1">{{item.title}}</view>-->
        <!--<view class="font_26 ellipsis_2" >简介：{{item.summary}}</view>-->
        <!--<text class="font_26">作者：{{item.author}}</text>-->
      <!--</view>-->
      <!--<view class="clearfloat"></view>-->
    <!--</view>-->
    <block wx:if="{{loading}}">
      <view class="weui-loadmore">
        <view class="weui-loading"></view>
        <view class="weui-loadmore__tips">正在加载</view>
      </view>
    </block>
    <block wx:if="{{noMore}}">
      <view class="weui-loadmore weui-loadmore_line weui-loadmore_dot">
        <view class="weui-loadmore__tips weui-loadmore__tips_in-line weui-loadmore__tips_in-dot"></view>
      </view>
    </block>
  </view>
</template>

<script>
  import wepy from 'wepy'
  import http from '../mixins/http'
  import base from '../mixins/base'
  import user from '../mixins/user'
//  import ShareMessage from '../mixins/ShareMessage'
  import { service } from '../config.js'
  import ClassifyList from '../components/classifyList'

  export default class pageCollect extends wepy.page {
    mixins = [base, http, user]
    config = {
      navigationBarTitleText: '藏书阁',
      enablePullDownRefresh: true
    }
    data = {
      libraries: {},
      mylibrary: {},
      user: {},
      nickName: '加载中...',
      list: [],
      loading: true,
      noMore: false,
      formId: [],
      library_id: '',
      from_openid: ''
    }
    computed = {
      nickName() {
        return (user && user.wechat && user.wechat.nickname) ? user.wechat.nickname : '未授权用户'
      }
    }
    onPullDownRefresh() {
      this.initPageData()
    }
    onShow() {
      // 初始化页面数据
      this.initPageData()
      this.$parent.getTracker(this.$root.$name, this.config.navigationBarTitleText)
    }
    onShareAppMessage(res) {
      return this.$parent.onShareAppMessage(this.config.navigationBarTitleText)
    }
    onReachBottom() {
      setTimeout(() => {
//        this.updateBookList(this.page)
        this.$apply()
      }, 200)
    }
    // 初始化页面数据
    initPageData() {
      let that = this
      this.$get({url: service.user}, {
        success: ({code, data}) => {
          that.user = data.user
          that.libraries = data.libraries
          that.list = data.mylibrary.library_sorts
          that.mylibrary = data.mylibrary
          that.library_id = data.mylibrary.id
          wx.setStorageSync('openid', data.user.wechat.openid)
//          setTimeout(() => {
          this.loading = false
          this.noMore = true
          this.$apply()
//          }, 500)
        }
      })
      that.page = 1
      // 请求列表
//      this.updateBookList(this.page)
    }
//    onShareAppMessage(res) {
//      let that = this
//      let url = '/pages/library/library/?id=' + that.library_id
////      debugger
//      if (res.from === 'menu') {
//        console.log(res.target)
//      }
//      return {
//        title: that.mylibrary.name,
//        path: url,
//        // 设置转发image，不设默认当前截
//        imageUrl: '',
//        success: function(res) {
//          wx.showToast({
//            title: '转发成功',
//            icon: 'success',
//            duration: 1500
//          })
//          var shareTickets = res.shareTickets
//          if (shareTickets.length == 0) {
//            return false
//          }
//        },
//        fail: function(res) {
//          // 转发失败
//        }
//      }
//    }
//    updateBookList(page) {
//      let that = this
//      this.loading = true
//      this.$get({
//        url: service.my_books,
//        data: {
//          page: page
//        }
//      }, {
//        success: ({code, data}) => {
//         that.noMoreList = false
//          that.noMore = false
//          if (data.current_page > data.last_page) {
//            this.noMoreList = true
//            that.noMore = true
//            return
//          }
//          data = data.data
//          // 请求到空列表后就认为没有更多了
//          if (this.isArray(data) && data.length === 0) {
//            that.noMore = true
//            return
//          }
//          if (that.list.length === 0 || that.page === 1) {
//            that.list = data.map(function (item) {
//              return item.book
//            })
//          } else {
//            data.map(function (item, index) {
//              that.list.push(item.book)
//            })
//          }
//          that.noMore = true
//          that.page += 1
//        },
//        fail: ({code, data}) => {
//          wx.showToast({
//            title: '出错了...',
//            image: '../images/icon/icon-error.png',
//            duration: 1500
//          })
//          that.noMore = true
//        },
//        complete: () => {
//          this.loading = false
//        }
//      })
//    }
    methods = {
//      navTo(library_id, _id) {
//       debugger
//        wx.navigateTo({url: '/pages/book/detail?library_id=' + library_id + '&id=' + _id})
//      },
      goto(url) {
        wx.navigateTo({url: url})
      },
      gotoTab(url) {
        wx.switchTab({url: url})
      },
      formSubmit(e) {
        this.formId.push(e.detail.formId)
        console.log(this.formId)
      },
      scanBook(libraryId) {
//        let that = this
        wx.scanCode({
          success: (res) => {
            if (res.result) {
              this.$post({
                url: service.books,
                data: {
                  'isbn': res.result
                }
              }, {
                success: ({code, data}) => {
                  if (data.title) {
                    let id = []
                    id.push(data.id)
                    this.$post({
                      url: service.books_collect,
                      data: {
                        'ids': id,
                        'formId': this.formId
                      }
                    }, {
                      success: ({code, data}) => {
                        setTimeout(() => {
                          wx.showToast({
                            title: '已加入收藏',
                            icon: 'none',
                            duration: 1500
                          })
//                          that.updateBookList(that.page)
                          this.formId = []
                        }, 800)
                      },
                      fail: (res) => {},
                      complete: () => { this.loaded = false }
                    })
                  } else {
                    wx.showToast({
                      title: '未能识别此书...',
                      image: '../images/icon/icon-error.png',
                      duration: 1500
                    })
                  }
                },
                fail: ({code, data}) => {
                  wx.showToast({
                    title: '未能识别此书...',
                    image: '../images/icon/icon-error.png',
                    duration: 1500
                  })
                },
                complete: () => { this.loaded = false }
              })
            }
          },
          fail: (res) => {
//            wx.showToast({
//              title: '未能识别出',
//              image: '../images/icon/icon-error.png',
//              duration: 1500
//            })
          }
        })
      }
    }

    components = {
      ClassifyList: ClassifyList
    }
  }
</script>

<style lang="less">
  @import "../styles/custom/fn.less";

  .page-user{
    @userinfoHeight: 100rpx;
    @userinfoSpace: 8rpx;

    .userinfo{
      padding: 20rpx ;
    }

    .userinfo-avatar {
      /*float: left;*/
      width: 120rpx;
      height: 120rpx;
      border-radius: 50%;
      margin-left:12rpx;
    }
    .userinfo-info {
      /*float: left;*/
      /*line-height: 1;*/
      font-weight: bold;
      color: #666666;
    }
    .userinfo-status {
      color: #999;
      font-size: (@userinfoHeight - 4 * @userinfoSpace) * (14 / 30);
    }
    .page_btn {
      padding:10rpx 60rpx;
      border-bottom: 2rpx solid #e5e3e4;
      margin-top: 8rpx;
    }
    .user_btn {
      background: white;
      padding:10rpx 60rpx;
      margin-top: 8rpx;
    }
    .flo_r {float: right}
    .weui-cell {
      padding: 0;
    }
  }
  .BookList {
    background: white;
    box-shadow: 1rpx 12rpx 12rpx #d3d3d3;
    padding: 6rpx 0;
    overflow: hidden;
    margin: 16rpx;
  }
  image {
    width: 240rpx;
    height: 240rpx;
    margin-top: 8rpx;
  }
  .weui-loadmore__tips_in-dot {
    height:auto;
  }
  .inline-block {display: inline-block}
  .flo_l {float: left}
  .flo_r {float: right}
  .font_26 {font-size: 26rpx}
  .font_28 {font-size: 28rpx}
  .bold{font-weight: bold}
  .clearfloat {clear:both}
  .white {background: white}
  .ellipsis_2 {
    overflow: hidden;
    text-overflow: ellipsis;
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
  }
  .ellipsis_1 {
    text-overflow : ellipsis;
    white-space : nowrap;
    overflow : hidden;
  }
  .btn {
    border: none;
    text-align: left;
    padding: 0;
    margin: 0;
    line-height: 1.5;
    background: none;
  }
  .library-wrapper{
    padding: 20rpx 20rpx;
    text-align: center;
    background: white;
    border-bottom: 16rpx solid #e2e2e2;
  }
</style>
